<Window x:Class="WheelDecideGeneratorApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WheelDecideGeneratorApp"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Wheel Decide Generator" Height="450" Width="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <DataGrid x:Name="segmentDataGrid" AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      Grid.Row="0" SelectionChanged="segmentDataGrid_SelectionChanged">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Value" Binding="{Binding Value, Mode=TwoWay}" Width="*"/>
                    <DataGridTemplateColumn Header="Background colour" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <xctk:ColorPicker x:Name="backgroundColourPicker" SelectedColor="{Binding BackgroundColour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Text colour" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <xctk:ColorPicker x:Name="textColourPicker" SelectedColor="{Binding TextColour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Weight" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <xctk:DoubleUpDown Value="{Binding Weight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0.1" Maximum="10" Increment="0.1"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <DockPanel Grid.Row="1">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Margin" Value="4,8"/>
                            <Setter Property="Width" Value="108"/>
                        </Style>
                    </StackPanel.Resources>
                    <Button x:Name="addButton" Content="Add" Click="addButton_Click"/>
                    <Button x:Name="removeSelectedButton" Content="Remove selected" IsEnabled="False" Click="removeSelectedButton_Click"/>
                    <Button x:Name="removeAllButton" Content="Remove all" IsEnabled="False" Click="removeAllButton_Click"/>
                </StackPanel>
                <Label Name="totalValuesLabel" Content="Total values: 0" VerticalAlignment="Center"/>
            </DockPanel>
        </Grid>
        <Grid Grid.Row="1" Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0"
                        VerticalAlignment="Center">
                <TextBlock>Segment multiplier</TextBlock>
                <xctk:IntegerUpDown x:Name="multiplierUpDown" Minimum="1" Maximum="100" Value="1" ValueChanged="multiplierUpDown_ValueChanged"/>
            </StackPanel>
            <StackPanel Grid.Column="1"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">
                <CheckBox x:Name="shuffleSegmentsCheckBox" Content="Shuffle wheel segments on generation"/>
            </StackPanel>
            <StackPanel Grid.Column="2" HorizontalAlignment="Right" Width="108px"
                        VerticalAlignment="Center">
                <Button x:Name="generateButton" Content="Generate" IsEnabled="False" Click="generateButton_Click"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
